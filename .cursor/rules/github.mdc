---
description: 
globs: 
alwaysApply: false
---

# GitHub MCP Integration Rule

## Critical Requirement
**ALWAYS** follow the [Conventional Commits v1.0.0 specification](mdc:https:/www.conventionalcommits.org/en/v1.0.0/#specification) when using GitHub MCP to create Pull Requests, commits, or any GitHub operations.

## Conventional Commit Format
```
<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
```

## Required Types
- `feat:` - New features (MINOR version)
- `fix:` - Bug fixes (PATCH version)  
- `docs:` - Documentation changes
- `test:` - Adding or updating tests
- `refactor:` - Code refactoring without feature changes
- `chore:` - Maintenance tasks, dependency updates
- `build:` - Build system or dependency changes
- `ci:` - CI/CD pipeline changes
- `style:` - Code style changes (formatting, semicolons, etc.)
- `perf:` - Performance improvements

## Breaking Changes
- Add `!` after type: `feat!: redesign playlist API`
- Or use footer: `BREAKING CHANGE: playlist format changed`
- Must correlate with MAJOR version bump

## GitHub MCP Rules
1. **PR Titles**: Must use Conventional Commit format
2. **Commit Messages**: Must follow specification exactly
3. **PR Descriptions**: Include summary, breaking changes, related issues
4. **Issue References**: Use `Closes #123` or `Refs #123`
5. **Scopes**: Use `(worker)`, `(ui)`, `(api)`, `(docs)`, `(test)`, `(client)`

## Examples
```bash
# Valid PR titles and commits
feat(worker): add AI playlist generation endpoint
fix(ui): resolve chat panel scroll issue
docs: update API documentation for v1.2.0
test(playlist): add validation test cases
chore(deps): update @cloudflare/workers-types to v4.20240208.0
ci: add automated testing workflow

# Multi-paragraph format
feat(api): implement playlist sharing functionality

Add public playlist sharing with cryptographic signatures.
Users can now generate shareable links for their playlists
with optional expiration dates.

BREAKING CHANGE: playlist schema now requires shareability field

Closes #42
Refs: #15, #38
```

## Enforcement
This rule applies to ALL GitHub operations through MCP:
- Creating Pull Requests
- Making commits
- Updating issues
- Creating releases
- Any Git operations

**NO EXCEPTIONS** - All GitHub MCP interactions must follow Conventional Commits specification. 