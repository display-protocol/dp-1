---
description: 
globs: 
alwaysApply: false
---
---
description: AI integration patterns for Workers AI, embeddings, and natural language processing
globs: ["**/*ai*", "**/*llm*", "**/*embedding*", "**/*prompt*"]
alwaysApply: false
---

# AI Integration Standards

## Workers AI Integration

### Default AI Provider
- Use Workers AI as the default AI inference provider
- For specific requests, use official SDKs (OpenAI, Anthropic)
- Implement AI Gateway for caching, logging, and instrumentation

### Natural Language Processing
- Implement command parser for the global prompt bar
- Convert natural language to typed commands (`list feeds`, `display id=xyz`)
- Support art similarity search via embeddings
- Generate playlist recommendations based on user preferences

### Structured JSON Outputs
```typescript
// Use JSON mode with response_format for structured outputs
const response = await client.chat.completions.create({
  model: 'gpt-4o-2024-08-06',
  messages: [...],
  response_format: {
    type: 'json_schema',
    schema: YourSchema
  }
});
```

### LLM-Friendly APIs
- Return structured JSON responses for easy LLM consumption
- Include reasoning chains in responses
- Support streaming for real-time updates
- Use JSON-patches for state diffs to enable LLM reasoning

### Embedding and Search
- Use Vectorize for storing art embeddings
- Implement semantic search for artworks
- Support similarity matching for playlist generation
- Index artwork metadata and provenance data

### Cost Management
- Implement per-device daily budget limits
- Set up throttling and alerting on overage
- Cache frequently used AI responses
- Use smaller models for simple tasks

### Prompt Engineering
- Create reusable prompt templates
- Include context about DP-1 protocol in system prompts
- Provide examples of expected JSON outputs
- Handle edge cases and error responses gracefully

### AI-First Features
- "Explain this artwork" - context and provenance analysis
- "Generate similar playlist" - based on current selection
- "Find artworks like..." - semantic search
- Natural language playlist filtering and sorting

@prototype/prompts/system-prompts.ts
@prototype/types/ai-types.ts
