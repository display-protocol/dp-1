# DP-1 Feed Operator API Environment Variables
# Copy this file to .env and fill in your actual values

# Required: API authentication secret (used for Bearer token validation)
# Generate with: openssl rand -hex 32
API_SECRET=your-super-secret-api-key-for-bearer-auth

# Required: Ed25519 private key for playlist signing (REQUIRED)
# Generate with one of these methods:
# Method 1 (PKCS#8 format): openssl genpkey -algorithm Ed25519 -out private.pem && openssl pkey -in private.pem -outform DER | xxd -p -c 256
# Method 2 (Raw 32-byte): openssl rand -hex 32
ED25519_PRIVATE_KEY=your-ed25519-private-key-hex

# Optional: Environment designation
ENVIRONMENT=development

# Optional: IPFS Gateway configuration
IPFS_GATEWAY_URL=https://ipfs.io
IPFS_GATEWAY_TOKEN=your-ipfs-gateway-token

# Optional: Arweave Gateway configuration
ARWEAVE_GATEWAY_URL=https://arweave.net
ARWEAVE_GATEWAY_TOKEN=your-arweave-gateway-token

# =============================================================
# Cloudflare Workers KV Namespace IDs
# =============================================================
# These are set in wrangler.toml after creating KV namespaces
# Run: npm run setup:kv to create the namespaces

# Development KV namespace IDs
DP1_PLAYLISTS_KV_ID=your-playlists-kv-namespace-id
DP1_PLAYLIST_GROUPS_KV_ID=your-playlist-groups-kv-namespace-id

# Preview KV namespace IDs (for wrangler dev)
DP1_PLAYLISTS_PREVIEW_KV_ID=your-playlists-preview-kv-namespace-id
DP1_PLAYLIST_GROUPS_PREVIEW_KV_ID=your-playlist-groups-preview-kv-namespace-id

# =============================================================
# Deployment Instructions
# =============================================================
# 1. Create KV namespaces:
#    npm run setup:kv
#
# 2. Update wrangler.toml with the KV namespace IDs printed above
#
# 3. Set secrets (API_SECRET and ED25519_PRIVATE_KEY):
#    npm run setup:secrets
#
# 4. Initialize default data:
#    npm run init:data
#
# 5. Deploy to development:
#    npm run deploy
#
# 6. For production:
#    npm run setup:kv:production
#    npm run setup:secrets:production  
#    npm run init:data:production
#    npm run deploy:production
#
# =============================================================
# Local Development with wrangler dev
# =============================================================
# When using 'wrangler dev', the preview KV namespaces are used
# Make sure to set the preview_id values in wrangler.toml

# =============================================================
# API Usage Examples
# =============================================================
# Create playlist:
# curl -X POST https://your-worker.your-subdomain.workers.dev/playlists \
#   -H "Authorization: Bearer $API_SECRET" \
#   -H "Content-Type: application/json" \
#   -d @examples/playlist.json
#
# Get playlist:
# curl https://your-worker.your-subdomain.workers.dev/playlists/your-playlist-id
#
# Create playlist group:
# curl -X POST https://your-worker.your-subdomain.workers.dev/playlist-groups \
#   -H "Authorization: Bearer $API_SECRET" \
#   -H "Content-Type: application/json" \
#   -d @examples/playlist-group.json

# Database Configuration (for production)
# DATABASE_URL=your-database-connection-string

# Logging and Monitoring
# LOG_LEVEL=info
# SENTRY_DSN=your-sentry-dsn

# CORS Configuration
# ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# Rate Limiting
# RATE_LIMIT_REQUESTS_PER_MINUTE=60
# RATE_LIMIT_REQUESTS_PER_HOUR=1000

# Feature Flags
# ENABLE_AI_GENERATION=false
# ENABLE_SIGNATURE_VERIFICATION=true
# ENABLE_PROVENANCE_VALIDATION=true

# Development/Testing
# NODE_ENV=development
# DEBUG=true 